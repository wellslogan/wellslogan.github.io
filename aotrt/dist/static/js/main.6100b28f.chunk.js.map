{"version":3,"sources":["assets/o_number.png","constants.ts","selectors/index.ts","actions/settings.actions.ts","components/Modal/AboutModal.tsx","components/Header/Header.tsx","components/Board/Board.tsx","utils.ts","components/Recipe/RecipeComponent.tsx","actions/values.actions.ts","components/Modal/ConfirmResetModal.tsx","App.tsx","serviceWorker.ts","reducers/values.reducer.ts","reducers/settings.reducer.ts","configureStore.ts","index.tsx"],"names":["module","exports","AllIngredients","Boards","name","icon","faBroadcastTower","ingredients","faCaravan","faUmbrellaBeach","faMapMarkerAlt","faStoreAlt","faGarage","Recipes","selectHiddenIngredients","s","settings","hiddenIngredients","selectCosts","values","costs","selectONumber","oNumber","SettingsActionTypes","createModal","props","isOpen","onResolve","className","role","aria-modal","aria-labelledby","faExclamationCircle","id","href","target","rel","onClick","type","Header","onGoTo","useState","showResults","setShowResults","query","setQuery","selectedIndex","setSelectedIndex","dispatch","useDispatch","search","useRef","handleSelect","hidden","setHidden","setTimeout","handleSlashKey","e","key","current","focus","select","stopPropagation","preventDefault","useEffect","document","addEventListener","removeEventListener","placeholder","value","onChange","onKeyDown","filtered","filter","ing","toLowerCase","includes","blur","prev","Math","max","min","length","ref","onSelect","AboutModal","faInfoCircle","SearchResults","lcQuery","useSelector","ingredient","map","i","idx","indexOf","firstPart","substring","highlighted","slice","lastPart","isHidden","BoardComponent","board","onHide","handleChange","ingredientName","val","undefined","parsed","parseFloat","isNaN","isFinite","toNumberOrDefault","style","display","data-tip","faMinusCircle","place","effect","a","b","RecipeComponent","recipe","recipeCost","useMemo","every","reduce","total","curIng","costsString","bothDefined","faCheckCircle","faTimesCircle","ValueActionTypes","setONumber","App","coachmark","showCoachmark","setShowCoachmark","handleValueChange","setValueA","setValueB","handleHide","toggleHidden","handleGoTo","el","getElementById","offsetTop","window","scrollTo","top","innerHeight","behavior","col","left","offsetLeft","offsetWidth","valA","valB","handleDocumentClick","animation","faExternalLink","faFlask","confirmModal","then","confirmed","location","reload","faTrashAlt","src","oNumberIcon","alt","faUsdCircle","Boolean","hostname","match","initialValuesState","addOrUpdateCost","initialSettingsState","valuesPersistConfig","storage","sessionStorage","settingsPersistConfig","rootReducer","combineReducers","persistReducer","state","action","store","createStore","persistor","persistStore","createAndPersistStore","ReactDOM","render","StrictMode","loading","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6100b28f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/o_number.5380014d.png\";","import { Board, IngredientName, Recipe } from './models';\nimport {\n  faBroadcastTower,\n  faCaravan,\n  faUmbrellaBeach,\n  faMapMarkerAlt,\n  faStoreAlt,\n  faGarage,\n} from '@fortawesome/pro-duotone-svg-icons';\n\nexport const AllIngredients: IngredientName[] = [\n  'Acetaldehyde',\n  'Glycerol',\n  'Methylbenzene',\n  'Nitrated Glycerol Solution',\n  'Mixed Acid',\n  'Plant Food',\n  'Paint',\n  'Vinegar',\n  'Ice',\n  'Bleach',\n  'Powdered Milk',\n  'Fat',\n  'Motor Oil',\n  'Wheel Cleaner',\n  'Table Salt',\n  'Racing Fuel',\n  'Insect Repellant',\n  'Vodka',\n  'Baking Soda',\n  'Detergent',\n  'Food Coloring',\n  'Drain Opener',\n  'Quarters',\n  'Glass Cleaner',\n  'Nail Polish Remover',\n  'Pennies',\n  'Pool Cleaner',\n  'Hexamine',\n  'Phenosulfonic Acid',\n  'Phenol',\n  'Aldehyde Sludge',\n  'Formeldahyde',\n  'Dinitro',\n];\n\nexport const Boards: Board[] = [\n  {\n    name: 'TV Station',\n    icon: faBroadcastTower,\n    ingredients: [\n      'Acetaldehyde',\n      'Glycerol',\n      'Methylbenzene',\n      'Nitrated Glycerol Solution',\n      'Mixed Acid',\n    ],\n  },\n  {\n    name: 'Trailer Park',\n    icon: faCaravan,\n    ingredients: [\n      'Plant Food',\n      'Paint',\n      'Vinegar',\n      'Ice',\n      'Bleach',\n      'Powdered Milk',\n    ],\n  },\n  {\n    name: 'Beach',\n    icon: faUmbrellaBeach,\n    ingredients: ['Fat', 'Motor Oil', 'Wheel Cleaner', 'Table Salt'],\n  },\n  {\n    name: 'Spawn Room',\n    icon: faMapMarkerAlt,\n    ingredients: [\n      'Racing Fuel',\n      'Insect Repellant',\n      'Vodka',\n      'Baking Soda',\n      'Detergent',\n      'Food Coloring',\n    ],\n  },\n  {\n    name: 'Beachside Market Rear',\n    icon: faStoreAlt,\n    ingredients: [\n      'Drain Opener',\n      'Quarters',\n      'Glass Cleaner',\n      'Nail Polish Remover',\n      'Pennies',\n      'Pool Cleaner',\n    ],\n  },\n  {\n    name: 'Garage',\n    icon: faGarage,\n    ingredients: [\n      'Hexamine',\n      'Phenosulfonic Acid',\n      'Phenol',\n      'Aldehyde Sludge',\n      'Formeldahyde',\n      'Dinitro',\n    ],\n  },\n];\n\nlet recipesList = [\n  ['Acetaldehyde', 'Vodka', 'Pennies'],\n  ['Glycerol', 'Fat', 'Vodka'],\n  ['Methylbenzene', 'Paint', 'Drain Opener', 'Detergent'],\n  ['Nitrated Glycerol Solution', 'Mixed Acid', 'Glycerol'],\n  ['Mixed Acid', 'Detergent', 'Drain Opener', 'Ice'],\n  ['Hexamine', 'Glass Cleaner', 'Formeldahyde'],\n  ['Phenosulfonic Acid', 'Phenol', 'Drain Opener'],\n  ['Phenol', 'Wheel Cleaner', 'Motor Oil', 'Insect Repellant'],\n  ['Aldehyde Sludge', 'Formeldahyde', 'Acetaldehyde', 'Detergent'],\n  ['Formeldahyde', 'Racing Fuel', 'Quarters'],\n  ['Dinitro', 'Methylbenzene', 'Baking Soda', 'Vinegar', 'Detergent'],\n  ['3-methyl-2,4-di-nitrobenzene', 'Dinitro', 'Racing Fuel'],\n  ['3,4-di-nitroxy-methyl-propane', 'Aldehyde Sludge', 'Nail Polish Remover'],\n  [\n    'Octa-hydro-2,5-nitro-3,4,7-para-zokine',\n    'Detergent',\n    'Hexamine',\n    'Plant Food',\n    'Vinegar',\n  ],\n  ['1,3,5-tera-nitra-phenol', 'Detergent', 'Phenosulfonic Acid'],\n];\n\nexport const Recipes: Recipe[] = [\n  { name: 'Acetaldehyde', ingredients: ['Vodka', 'Pennies'] },\n  { name: 'Glycerol', ingredients: ['Fat', 'Vodka'] },\n  {\n    name: 'Methylbenzene',\n    ingredients: ['Paint', 'Drain Opener', 'Detergent'],\n  },\n  {\n    name: 'Nitrated Glycerol Solution',\n    ingredients: ['Mixed Acid', 'Glycerol'],\n  },\n  { name: 'Mixed Acid', ingredients: ['Detergent', 'Drain Opener', 'Ice'] },\n  { name: 'Hexamine', ingredients: ['Glass Cleaner', 'Formeldahyde'] },\n  { name: 'Phenosulfonic Acid', ingredients: ['Phenol', 'Drain Opener'] },\n  {\n    name: 'Phenol',\n    ingredients: ['Wheel Cleaner', 'Motor Oil', 'Insect Repellant'],\n  },\n  {\n    name: 'Aldehyde Sludge',\n    ingredients: ['Formeldahyde', 'Acetaldehyde', 'Detergent'],\n  },\n  { name: 'Formeldahyde', ingredients: ['Racing Fuel', 'Quarters'] },\n  {\n    name: 'Dinitro',\n    ingredients: ['Methylbenzene', 'Baking Soda', 'Vinegar', 'Detergent'],\n  },\n  {\n    name: '3-methyl-2,4-di-nitrobenzene',\n    ingredients: ['Dinitro', 'Racing Fuel'],\n  },\n  {\n    name: '3,4-di-nitroxy-methyl-propane',\n    ingredients: ['Aldehyde Sludge', 'Nail Polish Remover'],\n  },\n  {\n    name: 'Octa-hydro-2,5-nitro-3,4,7-para-zokine',\n    ingredients: ['Detergent', 'Hexamine', 'Plant Food', 'Vinegar'],\n  },\n  {\n    name: '1,3,5-tera-nitra-phenol',\n    ingredients: ['Detergent', 'Phenosulfonic Acid'],\n  },\n];\n","import { AppState } from '../models';\n\nexport const selectHiddenIngredients = (s: AppState) =>\n  s.settings.hiddenIngredients;\nexport const selectCosts = (s: AppState) => s.values.costs;\nexport const selectONumber = (s: AppState) => s.values.oNumber;\n","import { IngredientName } from '../models';\n\nexport const SettingsActionTypes = {\n  TOGGLE_HIDDEN: 'SETTINGS:TOGGLE_HIDDEN',\n  RESET_HIDDEN: 'SETTINGS:RESET_HIDDEN',\n  SET_HIDDEN: 'SETTINGS:SET_HIDDEN',\n};\n\nexport const toggleHidden = (name: IngredientName) => ({\n  type: SettingsActionTypes.TOGGLE_HIDDEN,\n  name,\n});\n\nexport const setHidden = (name: IngredientName, hidden: boolean) => ({\n  type: SettingsActionTypes.SET_HIDDEN,\n  name,\n  hidden,\n});\n\nexport const resetHidden = () => ({ type: SettingsActionTypes.RESET_HIDDEN });\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationCircle } from '@fortawesome/pro-duotone-svg-icons';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { createModal } from 'react-modal-promise';\n\ntype Props = {\n  isOpen: boolean;\n  onResolve: (...params: any[]) => any;\n};\nconst AboutModal: React.FC<Props> = (props) => {\n  const { isOpen, onResolve } = props;\n  if (!isOpen) {\n    return null;\n  }\n  return (\n    <div className=\"fixed z-20 bg-gray-900 bg-opacity-25 bottom-0 inset-0 px-4 pb-4 sm:inset-0 sm:flex sm:items-center sm:justify-center\">\n      <div\n        className=\"bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:max-w-lg sm:w-full\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby=\"modal-headline\"\n      >\n        <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n          <div className=\"sm:flex sm:items-start\">\n            <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-indigo-100 text-indigo-700 sm:mx-0 sm:h-10 sm:w-10\">\n              <FontAwesomeIcon icon={faExclamationCircle} />\n            </div>\n            <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n              <h3\n                className=\"text-xl leading-6 font-medium text-gray-900\"\n                id=\"modal-headline\"\n              >\n                About the calculator\n              </h3>\n              <div className=\"mt-2 space-y-2\">\n                <p className=\"text-sm leading-5 text-gray-600\">\n                  AOTRT Chemical Calculator v2.0.0\n                </p>\n                <h3 className=\"text-lg leading-6\">Changelog</h3>\n                <p className=\"text-sm leading-6\">\n                  <strong>2.0.0 | 2020-06-20 </strong>\n                </p>\n                <ul className=\"text-sm leading-6 list-disc ml-8 mb-4 text-gray-700\">\n                  <li className=\"py-2\">\n                    UI rewrite with React &{' '}\n                    <a\n                      href=\"https://tailwindcss.com/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"underline hover:text-gray-900 transition ease-in-out duration-500\"\n                    >\n                      TailwindCSS\n                    </a>\n                    .\n                  </li>\n                  <li className=\"py-1\">\n                    Added ability to hide ingredients from the board.\n                  </li>\n                  <li className=\"py-1\">\n                    Ingredient values are now stored in sessionStorage so they\n                    will persist in the event of an accidental reload.\n                  </li>\n                  <li className=\"py-1\">\n                    Added \"Jump to\" search feature for quick keyboard navigation\n                    to ingredients and their values.\n                  </li>\n                </ul>\n                <hr />\n                <p className=\"text-sm leading-6 text-gray-900\">\n                  Suggestions, issues, corrections? Message{' '}\n                  <a\n                    href=\"https://reddit.com/u/wellslogan\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"underline hover:text-red-900 transition ease-in-out duration-500\"\n                  >\n                    /u/wellslogan\n                  </a>{' '}\n                  on reddit.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n          <span className=\"mt-3 flex w-full rounded-md shadow-sm sm:mt-0 sm:w-auto\">\n            <button\n              onClick={() => onResolve(false)}\n              type=\"button\"\n              className=\"inline-flex justify-center w-full rounded-md border border-gray-300 px-4 py-2 bg-white text-base leading-6 font-medium text-gray-700 shadow-sm hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5\"\n            >\n              Close\n            </button>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default createModal(AboutModal);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/pro-duotone-svg-icons';\nimport { AllIngredients } from '../../constants';\nimport { IngredientName } from '../../models';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectHiddenIngredients } from '../../selectors';\nimport { toggleHidden, setHidden } from '../../actions/settings.actions';\nimport AboutModal from '../Modal/AboutModal';\n\ntype Props = {\n  onGoTo: (name: IngredientName) => any;\n};\nexport const Header: React.FC<Props> = (props) => {\n  const { onGoTo } = props;\n\n  const [showResults, setShowResults] = useState<boolean>(false);\n  const [query, setQuery] = useState<string>('');\n  const [selectedIndex, setSelectedIndex] = useState<number>(0);\n\n  const dispatch = useDispatch();\n  const search = useRef<HTMLInputElement>(null);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setQuery(value);\n    setSelectedIndex(0);\n    if (value) setShowResults(true);\n  };\n\n  const handleSelect = (name: IngredientName) => {\n    setShowResults(false);\n    dispatch(setHidden(name, false));\n    setTimeout(() => onGoTo(name), 0);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    const filtered = AllIngredients.filter((ing) =>\n      ing.toLowerCase().includes(query.toLowerCase()),\n    );\n    if (e.key === 'Enter' && query) {\n      search.current?.blur();\n      handleSelect(filtered[selectedIndex]);\n    } else if (e.key === 'ArrowUp') {\n      setSelectedIndex((prev) => Math.max(0, prev - 1));\n      e.preventDefault();\n    } else if (e.key === 'ArrowDown') {\n      setSelectedIndex((prev) => Math.min(filtered.length - 1, prev + 1));\n      e.preventDefault();\n    }\n  };\n\n  const handleSlashKey = (e: KeyboardEvent) => {\n    if (e.key === '/') {\n      search.current?.focus();\n      search.current?.select();\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleSlashKey);\n\n    return () => document.removeEventListener('keydown', handleSlashKey);\n  }, []);\n\n  return (\n    <>\n      <div className=\"relative bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n          <div className=\"flex items-center border-b-2 border-gray-100 py-4\">\n            <div className=\"flex space-x-10\">\n              <h1 className=\"text-base leading-6 font-medium text-gray-700\">\n                Attack of the Radioactive Thing:\n                <br />\n                <span className=\"text-gray-600\">Chemistry Calculator 2.0</span>\n              </h1>\n            </div>\n            <div className=\"relative hidden md:flex md:flex-1\">\n              <input\n                className=\"mx-10 transition-colors duration-100 ease-in-out focus:outline-0 border border-transparent focus:bg-white focus:border-gray-300 placeholder-gray-600 rounded-lg bg-gray-200 py-2 px-4 block w-full appearance-none leading-normal ds-input\"\n                id=\"jumpToIngredient\"\n                type=\"text\"\n                placeholder={'Jump to ingredient (Press \"/\" to focus)'}\n                value={query}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                ref={search}\n              />\n              {showResults && (\n                <SearchResults\n                  query={query}\n                  selectedIndex={selectedIndex}\n                  onSelect={handleSelect}\n                />\n              )}\n            </div>\n            <div className=\"flex items-center flex-1 md:flex-none justify-end\">\n              <span className=\"inline-flex rounded-md shadow-sm\">\n                <button\n                  onClick={() => AboutModal({})}\n                  className=\"space-x-2 whitespace-no-wrap inline-flex items-center justify-center px-4 py-2 border border-transparent text-base leading-6 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition ease-in-out duration-150\"\n                >\n                  <FontAwesomeIcon icon={faInfoCircle} />\n                  <span>About</span>\n                </button>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst SearchResults: React.FC<any> = (props) => {\n  const { query, selectedIndex, onSelect } = props;\n  const lcQuery = query?.toLowerCase();\n\n  const hiddenIngredients = useSelector(selectHiddenIngredients);\n\n  if (!query) return null;\n\n  return (\n    <div className=\"absolute top-full w-full mt-2\">\n      <div className=\" mx-10 bg-white shadow-lg border border-gray-200 rounded-md\">\n        <ul className=\"py-2\">\n          {AllIngredients.filter((ingredient) =>\n            ingredient.toLowerCase().includes(lcQuery),\n          ).map((ingredient, i) => {\n            const lcIngredient = ingredient.toLowerCase();\n            const idx = lcIngredient.indexOf(lcQuery);\n            const firstPart = ingredient.substring(0, idx);\n            const highlighted = (\n              <strong className=\"text-indigo-600\">\n                {ingredient.slice(idx, idx + query.length)}\n              </strong>\n            );\n            const lastPart = ingredient.substring(idx + query.length);\n            const className = 'px-2 py-2 hover:bg-indigo-100';\n            const isHidden = hiddenIngredients.includes(ingredient);\n            return (\n              <li\n                key={ingredient}\n                className={\n                  i === selectedIndex ? `${className} bg-indigo-100` : className\n                }\n              >\n                <button\n                  className=\"block w-full text-left\"\n                  onClick={() => onSelect(ingredient)}\n                >\n                  {firstPart}\n                  {highlighted}\n                  {lastPart}\n                  {isHidden && (\n                    <em> (Ingredient hidden. Press Enter to show and go to)</em>\n                  )}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinusCircle } from '@fortawesome/pro-duotone-svg-icons';\nimport {\n  Board,\n  IngredientCost,\n  IngredientName,\n  IngredientCosts,\n} from '../../models';\nimport { toNumberOrDefault } from '../../utils';\nimport ReactTooltip from 'react-tooltip';\n\ntype Props = {\n  board: Board;\n  costs: IngredientCosts;\n  onChange: (\n    ingredientName: IngredientName,\n    key: keyof IngredientCost,\n    value: number | undefined,\n  ) => any;\n  onHide: (name: IngredientName) => any;\n  hiddenIngredients: IngredientName[];\n};\nexport const BoardComponent: React.FC<Props> = (props) => {\n  const { board, costs, hiddenIngredients, onChange, onHide } = props;\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    ingredientName: IngredientName,\n    key: keyof IngredientCost,\n  ) => {\n    const { value } = e.target;\n\n    onChange(ingredientName, key, toNumberOrDefault(value));\n  };\n\n  return (\n    <>\n      <h3 className=\"mb-4 text-xl flex space-x-2 items-center text-gray-600\">\n        <FontAwesomeIcon icon={board.icon} />\n        <span className=\"text-gray-800\">{board.name} Board</span>\n      </h3>\n      <div className=\"bg-gray-800 rounded text-white px-4 pb-4 pt-8 mb-6\">\n        <div className=\"flex flex-wrap items-center\">\n          {board.ingredients.map((ingredient) => {\n            const isHidden = hiddenIngredients.includes(ingredient);\n            const style = { display: isHidden ? 'none' : undefined };\n            return (\n              <Fragment key={ingredient}>\n                <div\n                  className=\"w-1/3 mb-4\"\n                  style={style}\n                  id={`ingredient_lbl_${ingredient}`}\n                >\n                  <button\n                    className=\"appearance-none hover:text-gray-400\"\n                    onClick={() => onHide(ingredient)}\n                    data-tip=\"Hide this ingredient from the board\"\n                  >\n                    <FontAwesomeIcon icon={faMinusCircle} />\n                  </button>\n                  &nbsp;&nbsp;\n                  {ingredient}\n                  <ReactTooltip place=\"top\" type=\"dark\" effect=\"solid\" />\n                </div>\n                <div className=\"w-1/3 mb-4\" style={style}>\n                  <div className=\"px-2\">\n                    <input\n                      className=\"border transition-colors duration-100 ease-in-out outline-0 border-transparent font-bold focus:bg-gray-200 focus:text-gray-700 placeholder-gray-400 focus:placeholder-gray-700 rounded-lg bg-gray-600 py-2 px-4 block w-full appearance-none leading-normal ds-input\"\n                      id={`ingredient_${ingredient}_val_a`}\n                      type=\"number\"\n                      placeholder=\"Value A\"\n                      value={costs[ingredient]?.a}\n                      onChange={(e) => handleChange(e, ingredient, 'a')}\n                    />\n                  </div>\n                </div>\n                <div className=\"w-1/3 mb-4\" style={style}>\n                  <div className=\"px-2\">\n                    <input\n                      className=\"border transition-colors duration-100 ease-in-out outline-0 border-transparent font-bold focus:bg-gray-200 focus:text-gray-700 placeholder-gray-400 focus:placeholder-gray-700 rounded-lg bg-gray-600 py-2 px-4 block w-full appearance-none leading-normal ds-input\"\n                      id={`ingredient_${ingredient}_val_b`}\n                      type=\"number\"\n                      placeholder=\"Value B\"\n                      value={costs[ingredient]?.b}\n                      onChange={(e) => handleChange(e, ingredient, 'b')}\n                    />\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const toNumberOrDefault = (\n  val?: string | number,\n): number | undefined => {\n  if (typeof val === 'number' || val === undefined) {\n    return val;\n  }\n\n  const parsed = parseFloat(val);\n  if (isNaN(parsed) || !isFinite(parsed)) {\n    return undefined;\n  }\n\n  return parsed;\n};\n","import React, { useMemo } from 'react';\nimport {\n  Recipe,\n  IngredientCosts,\n  IngredientCost,\n  IngredientName,\n} from '../../models';\nimport { useSelector } from 'react-redux';\nimport { selectCosts, selectONumber } from '../../selectors';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheckCircle,\n  faTimesCircle,\n} from '@fortawesome/pro-duotone-svg-icons';\n\ntype Props = {\n  recipe: Recipe;\n  onClick: (name: IngredientName) => any;\n};\nexport const RecipeComponent: React.FC<Props> = (props) => {\n  const { recipe, onClick } = props;\n  const costs = useSelector(selectCosts);\n  const oNumber = useSelector(selectONumber);\n\n  const recipeCost = useMemo(() => {\n    if (\n      !recipe.ingredients.every(\n        (ing) => costs[ing]?.a !== undefined && costs[ing]?.b !== undefined,\n      ) ||\n      oNumber === undefined\n    ) {\n      return undefined;\n    }\n\n    const sum = recipe.ingredients.reduce((total, curIng) => {\n      const { a, b } = costs[curIng] ?? {};\n      return total + (a ?? 0) + (b ?? 0);\n    }, 0);\n\n    return sum - oNumber;\n  }, [costs, recipe.ingredients, oNumber]);\n\n  return (\n    <div className=\"mb-4\">\n      <h2 className=\"text-xl\">\n        {recipe.name}\n        {recipeCost !== undefined && <strong> (Cost: {recipeCost})</strong>}\n      </h2>\n      <ul>\n        {recipe.ingredients.map((ing, idx) => {\n          const { a, b } = costs[ing] ?? {};\n          let costsString = '';\n          if (a !== undefined && b !== undefined) {\n            costsString = `(${a}, ${b})`;\n          } else if (a !== undefined) {\n            costsString = `(${a}, ???)`;\n          } else if (b !== undefined) {\n            costsString = `(???, ${b})`;\n          }\n\n          const bothDefined = a !== undefined && b !== undefined;\n          const className = bothDefined\n            ? 'bg-green-100 text-green-800'\n            : 'bg-red-100 text-red-800';\n\n          return (\n            <li key={idx} className={className}>\n              <FontAwesomeIcon\n                className={bothDefined ? 'text-green-700' : 'text-red-700'}\n                icon={bothDefined ? faCheckCircle : faTimesCircle}\n              />{' '}\n              <button className=\"hover:underline\" onClick={() => onClick(ing)}>\n                {ing}\n              </button>\n              <span className=\"opacity-75\"> {costsString}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import { IngredientName } from '../models';\n\nexport const ValueActionTypes = {\n  SET_VALUE_A: 'VALUES:SET_VALUE_A',\n  SET_VALUE_B: 'VALUES:SET_VALUE_B',\n  CLEAR_VALUES: 'VALUES:CLEAR_VALUES',\n  SET_O_NUMBER: 'VALUES:SET_O_NUMBER',\n};\n\nexport const setValueA = (name: IngredientName, value?: number) => ({\n  type: ValueActionTypes.SET_VALUE_A,\n  name,\n  value,\n});\n\nexport const setValueB = (name: IngredientName, value?: number) => ({\n  type: ValueActionTypes.SET_VALUE_B,\n  name,\n  value,\n});\n\nexport const setONumber = (oNumber?: number) => ({\n  type: ValueActionTypes.SET_O_NUMBER,\n  oNumber,\n});\n\nexport const clearValues = () => ({ type: ValueActionTypes.CLEAR_VALUES });\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationCircle } from '@fortawesome/pro-duotone-svg-icons';\nimport { createModal } from 'react-modal-promise';\n\ntype Props = {\n  isOpen: boolean;\n  onResolve: (...params: any[]) => any;\n};\nconst Modal: React.FC<Props> = (props) => {\n  const { isOpen, onResolve } = props;\n  if (!isOpen) {\n    return null;\n  }\n  return (\n    <div className=\"fixed z-20 bg-gray-900 bg-opacity-25 bottom-0 inset-0 px-4 pb-4 sm:inset-0 sm:flex sm:items-center sm:justify-center\">\n      <div\n        className=\"bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:max-w-lg sm:w-full\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby=\"modal-headline\"\n      >\n        <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n          <div className=\"sm:flex sm:items-start\">\n            <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 text-red-700 sm:mx-0 sm:h-10 sm:w-10\">\n              <FontAwesomeIcon icon={faExclamationCircle} />\n            </div>\n            <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n              <h3\n                className=\"text-xl leading-6 font-medium text-gray-900\"\n                id=\"modal-headline\"\n              >\n                Reset calculator?\n              </h3>\n              <div className=\"mt-2\">\n                <p className=\"text-sm leading-5 text-gray-600\">\n                  Are you sure you want to reset all chemical calculator values?\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n          <span className=\"flex w-full rounded-md shadow-sm sm:ml-3 sm:w-auto\">\n            <button\n              onClick={() => onResolve(true)}\n              type=\"button\"\n              className=\"inline-flex justify-center w-full rounded-md border border-transparent px-4 py-2 bg-red-600 text-base leading-6 font-medium text-white shadow-sm hover:bg-red-500 focus:outline-none focus:border-red-700 focus:shadow-outline-red transition ease-in-out duration-150 sm:text-sm sm:leading-5\"\n            >\n              Reset\n            </button>\n          </span>\n          <span className=\"mt-3 flex w-full rounded-md shadow-sm sm:mt-0 sm:w-auto\">\n            <button\n              onClick={() => onResolve(false)}\n              type=\"button\"\n              className=\"inline-flex justify-center w-full rounded-md border border-gray-300 px-4 py-2 bg-white text-base leading-6 font-medium text-gray-700 shadow-sm hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5\"\n            >\n              Cancel\n            </button>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default createModal(Modal);\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Header, BoardComponent, RecipeComponent } from './components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faExternalLink,\n  faFlask,\n  faUsdCircle,\n  faTrashAlt,\n} from '@fortawesome/pro-duotone-svg-icons';\nimport { Boards, Recipes } from './constants';\nimport { AppState, IngredientCost, IngredientName } from './models';\nimport {\n  setValueA,\n  setValueB,\n  setONumber,\n  clearValues,\n} from './actions/values.actions';\nimport { toggleHidden, resetHidden } from './actions/settings.actions';\nimport oNumberIcon from './assets/o_number.png';\nimport { selectONumber, selectCosts } from './selectors';\nimport ModalContainer from 'react-modal-promise';\nimport confirmModal from './components/Modal/ConfirmResetModal';\n\nconst App: React.FC = () => {\n  const costs = useSelector(selectCosts);\n  const oNumber = useSelector(selectONumber);\n  const hiddenIngredients = useSelector(\n    (s: AppState) => s.settings.hiddenIngredients,\n  );\n  const dispatch = useDispatch();\n  const coachmark = useRef<HTMLDivElement>(null);\n  const [showCoachmark, setShowCoachmark] = useState<boolean>(false);\n\n  const handleValueChange = (\n    ingredient: IngredientName,\n    key: keyof IngredientCost,\n    value?: number,\n  ) => {\n    if (key === 'a') {\n      dispatch(setValueA(ingredient, value));\n    } else {\n      dispatch(setValueB(ingredient, value));\n    }\n  };\n\n  const handleHide = (name: IngredientName) => {\n    dispatch(toggleHidden(name));\n  };\n\n  const handleShowAll = () => {\n    dispatch(resetHidden());\n  };\n\n  const handleGoTo = (name: IngredientName) => {\n    const id = `ingredient_lbl_${name}`;\n    const el = document.getElementById(id);\n    if (el) {\n      const { offsetTop } = el;\n      window.scrollTo({\n        top: offsetTop - window.innerHeight / 2,\n        behavior: 'smooth',\n      });\n      if (coachmark.current) {\n        coachmark.current.style.top = `${offsetTop}px`;\n        const col = document.getElementById('ingredientValuesColumn');\n        if (col) {\n          coachmark.current.style.left = `${\n            col.offsetLeft + col.offsetWidth - 10\n          }px`;\n        }\n\n        const valA = document.getElementById(\n          `ingredient_${name}_val_a`,\n        ) as HTMLInputElement;\n        const valB = document.getElementById(\n          `ingredient_${name}_val_b`,\n        ) as HTMLInputElement;\n\n        if (valA && !valA.value) {\n          valA.focus();\n        } else if (valB && !valB.value) {\n          valB.focus();\n        }\n\n        setShowCoachmark(true);\n\n        // setTimeout(() => setShowCoachmark(false), 4_000);\n      }\n    }\n  };\n\n  const handleDocumentClick = (e: MouseEvent) => {\n    if (showCoachmark) {\n      setShowCoachmark(false);\n    }\n  };\n\n  const handleReset = () =>\n    confirmModal({}).then((confirmed) => {\n      if (confirmed) {\n        dispatch(clearValues());\n        dispatch(setONumber(undefined));\n        window.location.reload();\n      }\n    });\n\n  const handleONumberChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    dispatch(setONumber(value ? parseFloat(value) : undefined));\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleDocumentClick);\n\n    return () => document.removeEventListener('click', handleDocumentClick);\n  });\n\n  return (\n    <>\n      <ModalContainer />\n      <div\n        id=\"coachmark\"\n        className=\"absolute z-10 w-12 h-6 bg-indigo-600 text-white\"\n        style={{\n          display: showCoachmark ? undefined : 'none',\n          animation: 'move_coachmark 0.5s ease-in-out 0s infinite alternate',\n        }}\n        ref={coachmark}\n      ></div>\n      <Header onGoTo={handleGoTo} />\n      <div className=\"max-w-6xl mx-auto px-4 my-4 sm:px-6\">\n        <div\n          className=\"bg-green-100 rounded text-green-700 px-4 py-3\"\n          role=\"alert\"\n        >\n          <div className=\"flex space-x-4 items-center\">\n            <FontAwesomeIcon icon={faExternalLink} />\n            <p className=\"leading-6\">\n              <a\n                className=\"underline hover:text-green-900 transition duration-500 ease-in-out\"\n                href=\"https://docs.google.com/document/d/1_Zco-XbZJb_d4o6J0FrKH-wj2NTK5-z0wsEUOow6ISY/edit#\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Information & Recipes sourced from the /r/codzombies community\n                guide hosted by /u/The_Kronorium\n              </a>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"max-w-6xl mx-auto px-4 my-4 sm:px-6 flex flex-wrap \">\n        <p className=\"leading-6 text-gray-700\">\n          {hiddenIngredients.length ? (\n            <>\n              Hiding {hiddenIngredients.length} ingredient\n              {hiddenIngredients.length === 1 ? '' : 's'}.{' '}\n              <button\n                onClick={handleShowAll}\n                className=\"appearance-none underline hover:text-indigo-400 transition-colors duration-500 ease-in-out\"\n              >\n                Click here to show all.\n              </button>\n            </>\n          ) : (\n            'Not hiding any ingredients.'\n          )}\n        </p>\n      </div>\n      <div className=\"max-w-6xl mx-auto px-4 my-4 sm:px-6 flex flex-wrap \">\n        <div className=\"w-full md:w-1/2 md:pr-4\" id=\"ingredientValuesColumn\">\n          <h2 className=\"mb-6 font-bold text-2xl flex space-x-4 items-center text-gray-600\">\n            <FontAwesomeIcon icon={faFlask} />\n            <span className=\"text-gray-800\">Ingredient values</span>\n            <button\n              onClick={handleReset}\n              className=\"space-x-2 whitespace-no-wrap inline-flex items-center justify-center px-4 py-2 border border-transparent text-base leading-6 font-medium rounded-md text-white bg-red-600 hover:bg-red-500 focus:outline-none focus:border-red-700 focus:shadow-outline-indigo active:bg-red-700 transition ease-in-out duration-150\"\n            >\n              <FontAwesomeIcon icon={faTrashAlt} />\n              <span>Clear all</span>\n            </button>\n          </h2>\n          <div className=\"flex mb-6 space-x-4 items-center\">\n            <img src={oNumberIcon} alt=\"O Number\" />\n            <span> = </span>\n            <input\n              type=\"number\"\n              className=\"transition-colors duration-100 ease-in-out focus:outline-0 border border-transparent focus:bg-white focus:border-gray-300 placeholder-gray-600 rounded-lg bg-gray-200 py-2 px-4 block w-full appearance-none leading-normal ds-input\"\n              value={oNumber}\n              onChange={handleONumberChange}\n              placeholder={'Enter \"O\" number'}\n            />\n          </div>\n          {Boards.map((board) => (\n            <BoardComponent\n              key={board.name}\n              board={board}\n              costs={costs}\n              hiddenIngredients={hiddenIngredients}\n              onChange={handleValueChange}\n              onHide={handleHide}\n            />\n          ))}\n        </div>\n        <div className=\"w-full md:w-1/2 md:pl-4\">\n          <h2 className=\"mb-6 text-2xl font-bold flex space-x-4 items-center text-gray-600\">\n            <FontAwesomeIcon icon={faUsdCircle} />\n            <span className=\"text-gray-800\">Recipes and costs</span>\n          </h2>\n          {Recipes.map((recipe) => (\n            <RecipeComponent\n              recipe={recipe}\n              key={recipe.name}\n              onClick={handleGoTo}\n            />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { IngredientCosts, IngredientCost } from '../models';\nimport { ValueActionTypes } from '../actions/values.actions';\n\nexport type ValuesState = {\n  costs: IngredientCosts;\n  oNumber?: number;\n};\n\nconst initialValuesState: ValuesState = {\n  costs: {},\n};\n\nconst addOrUpdateCost = (\n  costs: IngredientCosts,\n  key: keyof IngredientCost,\n  name: keyof IngredientCosts,\n  value: number,\n): IngredientCosts => {\n  return {\n    ...costs,\n    [name]: {\n      ...(costs[name] ?? {}),\n      [key]: value,\n    },\n  };\n};\n\nexport const valuesReducer = (\n  state: ValuesState = initialValuesState,\n  action: any,\n): ValuesState => {\n  switch (action.type) {\n    case ValueActionTypes.SET_VALUE_A:\n      return {\n        ...state,\n        costs: addOrUpdateCost(state.costs, 'a', action.name, action.value),\n      };\n    case ValueActionTypes.SET_VALUE_B:\n      return {\n        ...state,\n        costs: addOrUpdateCost(state.costs, 'b', action.name, action.value),\n      };\n    case ValueActionTypes.CLEAR_VALUES:\n      return { ...state, costs: {} };\n    case ValueActionTypes.SET_O_NUMBER:\n      return { ...state, oNumber: action.oNumber };\n    default:\n      return state;\n  }\n};\n","import { SettingsActionTypes } from '../actions/settings.actions';\nimport { IngredientName } from '../models';\n\nexport type SettingsState = {\n  hiddenIngredients: IngredientName[];\n};\n\nconst initialSettingsState: SettingsState = {\n  hiddenIngredients: [],\n};\n\nexport const settingsReducer = (\n  state: SettingsState = initialSettingsState,\n  action: any,\n): SettingsState => {\n  switch (action.type) {\n    case SettingsActionTypes.TOGGLE_HIDDEN:\n      return {\n        ...state,\n        hiddenIngredients: state.hiddenIngredients.includes(action.name)\n          ? state.hiddenIngredients.filter((i) => i !== action.name)\n          : [...state.hiddenIngredients, action.name],\n      };\n    case SettingsActionTypes.SET_HIDDEN: {\n      return {\n        ...state,\n        hiddenIngredients: action.hidden\n          ? [...state.hiddenIngredients, action.name]\n          : state.hiddenIngredients.filter((i) => i !== action.name),\n      };\n    }\n    case SettingsActionTypes.RESET_HIDDEN:\n      return { ...state, hiddenIngredients: [] };\n    default:\n      return state;\n  }\n};\n","import { combineReducers, createStore } from 'redux';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport sessionStorage from 'redux-persist/lib/storage/session';\n\nimport { valuesReducer, settingsReducer } from './reducers';\n\nconst valuesPersistConfig = {\n  key: 'values',\n  storage: sessionStorage,\n};\n\nconst settingsPersistConfig = {\n  key: 'settings',\n  storage: storage,\n};\n\nconst rootReducer = combineReducers({\n  values: persistReducer(valuesPersistConfig, valuesReducer),\n  settings: persistReducer(settingsPersistConfig, settingsReducer),\n});\n\n// const persistedRootReducer = persistReducer(rootPersistConfig, rootReducer);\n\nexport default () => {\n  const store = createStore(rootReducer);\n  const persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport createAndPersistStore from './configureStore';\n\nconst { store, persistor } = createAndPersistStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}